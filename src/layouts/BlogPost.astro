---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import FeatureFlag from "../config/FeatureFlag/featureflag.json";

try {
  if (!FeatureFlag.CaseLaw) {
    return Astro.redirect("/access-denied");
  }
} catch (error) {
  return Astro.redirect("/404");
}
type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, tags } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="bg-dracula-bg text-dracula-foreground leading-relaxed">
    <Header />

    <main class="max-w-5xl mx-auto px-8 sm:px-14 py-20">
      <article class="relative bg-white shadow-lg rounded-2xl p-10 sm:p-14">
        <div class="text-center mb-6">
          <p class="text-base text-dracula-comment">
            <FormattedDate date={pubDate} />
          </p>
          {
            tags && tags.length > 0 && (
              <div class="mt-4 flex flex-wrap justify-center gap-2">
                {tags.map((tag) => (
                  <span class="px-3 py-1 text-lg font-semibold text-white bg-dracula-pink  rounded-lg">
                    {tag}
                  </span>
                ))}
              </div>
            )
          }
        </div>
        <h1
          class="text-5xl font-extrabold text-gray-900 leading-snug text-center mb-6"
        >
          {title}
        </h1>
        <hr class="border-dracula-current-line my-6 w-24 mx-auto" />
        <div
          class="blog-content text-[20px] text-gray-800 leading-[1.8] text-justify"
        >
          <slot />
        </div>
      </article>
    </main>

    <Footer />
  </body>
</html>
